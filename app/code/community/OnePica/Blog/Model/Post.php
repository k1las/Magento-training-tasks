<?php

/**
 * Class OnePica_Blog_Model_Post
 */
class OnePica_Blog_Model_Post extends Mage_Core_Model_Abstract
{
    /**
     * Entity type code
     */
    const ENTITY = 'onepica_blog_post';

    /** Model cache tag
     *
     * @var string $_cacheTag
     */
    protected $_cacheTag = 'onepica_blog_post';

    /**
     * Table init
     */
    protected function _construct()
    {
        $this->_init('onepica_blog/post');
    }

    /**
     * Retrieves array of related post IDs
     *
     * @return array
     */
    public function getRelatedTags()
    {
        $tagIds = Mage::getModel('onepica_blog/post_relation')
                ->setPostId($this->getId())
                ->getTagIds();

        return Mage::getModel('tag/tag')
                ->getCollection()
                ->addFieldToFilter('tag_id', array('in' => $tagIds));
    }

    /**Before save
     *
     * @return Mage_Core_Model_Abstract
     */
    protected function _beforeSave()
    {
        $this->createTagRelations();
        return parent::_beforeSave(); // TODO: Change the autogenerated stub
    }

    /**
     * Tag relations
     */
    public function createTagRelations()
    {
        if (!empty($this->getTags())) {
            $this->deleteRelations();

            $tags = explode(',', $this->getTags());

            foreach ($tags as $tag) {
                $tagModel = Mage::getModel('tag/tag');
                $tagModel->load($tag, 'name');
                if (!$tagModel->getId()) {
                    $tagModel->setName($tag)
                            ->setStatus(0)
                            ->setFirstCustomerId(1)
                            ->setFirstStoreId(1);

                    $tagModel->save();
                }

                $this->addTagRelation($tagModel->getTagId());
            }
        }
    }

    /**Tag relation
     * @param int $tagId
     * @return bool|Mage_Core_Model_Abstract
     */
    public function addTagRelation($tagId)
    {
        $postRelation = Mage::getModel('onepica_blog/post_relation');
        $postRelation->setTagId($tagId)
                ->setPostId($this->getId());

        try {
            return $postRelation->save();
        } catch (Exception $e) {
            return false;
        }
    }

    /**
     * Delete post relations
     */
    public function deleteRelations()
    {
        $resource = Mage::getSingleton('core/resource');
        $writeConnection = $resource->getConnection('core_write');
        $table = $resource->getTableName('onepica_blog/relation');

        $query = "DELETE FROM {$table} WHERE post_id = '{$this->getId()}'";
        $writeConnection->query($query);
    }
}
